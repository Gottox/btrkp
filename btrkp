#!/bin/sh
BACKUPDIR=.backup

SUDO=sudo
BTRFS=btrfs
REMOTE_SUDO=sudo
REMOTE_BTRFS=btrfs

die() {
	msg=$1; shift
	printf "$msg\n" "$@"
	exit 1
}

snapshotdir() {
	local subvolume="$1"
	printf "%s/%s/%s\n" "$(findmnt -T $subvolume -no TARGET)" \
		"$BACKUPDIR" "$(printf "%s\n" "$subvolume" | tr '/' '~')"
}

snapshotname() {
	local subvolume="$1"
	local snapshotdir="$(snapshotdir "$1")"
	local date=$(date "+%Y-%m-%d")
	local suffix= basedir="${snapshotdir}/${date}"

	if ls -1d "${basedir}_"* > /dev/null 2>&1; then
		suffix="_$(ls -dr "${basedir}_"* | head -n1 | cut -d_ -f2 | xargs expr 1 +)"
	elif [ -e "${basedir}" ]; then
		suffix=_1
	fi
	printf "%s%s\n" "$basedir" "$suffix"
}

progress() {
	FORMAT="%N current %r avg %a %b"

	pv -c -W -F "$FORMAT" "$@"
}

snapshot() {
	local subvolume="$1"
	local snapshot="$2"
	$SUDO mkdir -p $(dirname "$snapshot")
	$SUDO $BTRFS subvolume snapshot -r "$subvolume" "$snapshot"
}

via_ssh() {
	local dest="$1"
	local base="$2"

	progress -D 0 -N "raw" | lzma --fast | progress -D 0.5 -N "compressed" | \
		ssh "${dest%:*}" $REMOTE_SUDO mkdir -p "${dest#*:}/$base" ';' unlzma '|' \
			$REMOTE_SUDO $REMOTE_BTRFS receive "${dest#*:}/$base"
}

via_fs() {
	local dest="$1"
	local base="$2"

	progress -D 0 -N "raw" | \
		$SUDO $BTRFS receive "$dest/$base"
}

transmit() {
	local current="$1"
	local dest="$2"
	local snapshotdir=$(dirname "$current")
	local snap=
	local base="$(basename "$snapshotdir")"

	{ ls -1rd $snapshotdir/* | grep -vFx "$current"; printf "_\n"; } | while read snap; do
		if [ $snap != '_' ]; then
			parent="-p $snap"
			printf "Using Parent %s\n" "$snap"
		else
			printf "FULL BACKUP\n"
		fi
		via=via_ssh
		if [ "${dest#*:}" = "$dest" ]; then
			via=via_fs
		fi
		printf "\n\n\n";
		$SUDO $BTRFS send $parent "$current" | $via "$dest" "${base}" && break
	done
}

cleanup () {
	local subvolume="$1"
	local snapshotdir="$(snapshotdir "$subvolume")"
	local cleanup="$2"
	ls -1d $snapshotdir/* | head -n -$2 | $SUDO xargs -r -L1 $BTRFS subvolume delete
}

backup() {
	local subvolume="$1"
	local snapshotname="$(snapshotname "$subvolume")"
	local dest="$2"
	local cleanup="$3"
	snapshot "$subvolume" "$snapshotname" || die "snapshot failed"
	transmit "$snapshotname" "$dest" || die "transmit failed"

	if [ -n "$cleanup" ] && [ "$cleanup" -gt "0" ]; then
		cleanup "$subvolume" "$cleanup" || die "cleanup failed"
	fi
}

usage() {
	cat <<EOF
$0 - a dead simple backup tool. Usage:
  $0 <(sub)volume> [user@]<host>:<remote destination>
  $0 <(sub)volume> <local destination>
EOF
	exit 1;
}

if [ $# -eq 1 ]; then
	oldifs=$IFS
	IFS="
"
	set -- $(cat $(snapshotdir $1)/.args 2> /dev/null)
	IFS=$oldifs
	if [ $# -ne 3 ]; then
		echo "ERROR: could not read args file"
		exit 1
	fi
elif [ $# -ne 3 ]; then
	usage
fi

backup "$@"

printf "%s\n" "$@" | sudo tee $(snapshotdir $1)/.args > /dev/null
